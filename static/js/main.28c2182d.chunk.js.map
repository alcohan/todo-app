{"version":3,"sources":["components/UsePrevious.js","components/Todo.js","components/Form.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","Todo","props","_useState","useState","_useState2","Object","slicedToArray","isEditing","setEditing","_useState3","_useState4","newName","setNewName","editFieldRef","editButtonRef","wasEditing","editingTemplate","react_default","a","createElement","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","Button","variant","deleteTask","focus","Form","setName","addTask","autoComplete","placeholder","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","keys","App","tasks","setTasks","tasksNoun","length","headingText","concat","filter","listHeadingRef","updatedTasks","map","objectSpread","remainingTasks","editedTaskList","taskList","key","filterList","prevTaskLength","Paper","sx","p","display","flexDirection","newTask","nanoid","toConsumableArray","ButtonGroup","tabIndex","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.28c2182d.chunk.js","sourcesContent":["import {useRef, useEffect} from \"react\";\r\n\r\nexport default function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }","import React, { useEffect, useRef, useState } from \"react\";\r\nimport usePrevious from \"./UsePrevious\";\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName('');\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input \r\n          id={props.id} \r\n          className=\"todo-text\" \r\n          type=\"text\" \r\n          value={newName} \r\n          onChange={handleChange} \r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\" >\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <Button \r\n            variant=\"outlined\" \r\n            className=\"btn\" \r\n            onClick={() => setEditing(true)}\r\n            ref={editButtonRef}\r\n          >\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </Button>\r\n          <Button\r\n            variant=\"text\"\r\n            className=\"btn\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n  \r\n  useEffect( () => {\r\n    if(!wasEditing && isEditing ) {\r\n      editFieldRef.current.focus();\r\n    } \r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n    }, [wasEditing, isEditing]);\r\n\r\n  return(\r\n    <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\r\n  );\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function Form(props) {\r\n    const [name, setName] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (name != \"\") {\r\n            props.addTask(name);\r\n            setName('');\r\n        }\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          placeholder='Type something...'\r\n        />\r\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n}","import React from \"react\";\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function FilterButton(props) {\r\n    return (\r\n        <Button \r\n            variant=\"outlined\" \r\n            className=\"btn toggle-btn mdc-button--outlined\" \r\n            aria-pressed={props.isPressed}\r\n            onClick={() => props.setFilter(props.name)}\r\n        >\r\n            <span className=\"visually-hidden\">Show </span>\r\n            <span>{props.name}</span>\r\n            <span className=\"visually-hidden\"> tasks</span>\r\n        </Button>\r\n    );\r\n}","// import './App.css';\r\nimport './myCSS.css';\r\nimport {useTheme} from'@mui/material/styles';\r\nimport ToggleButtonGroup from '@mui/material/ButtonGroup';\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport Todo from \"./components/Todo\";\r\nimport Form from \"./components/Form\";\r\nimport FilterButton from \"./components/FilterButton\";\r\nimport {nanoid} from \"nanoid\";\r\nimport usePrevious from \"./components/UsePrevious.js\";\r\n\r\n//style imports from dashboard example\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Link from '@mui/material/Link';\r\n// import MenuIcon from '@mui/icons-material/Menu';\r\n// import ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n// import NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\n/* Using Material UI: https://mui.com/material-ui/react-button-group/ */\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed\r\n};\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction App(props) {\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n  const tasksNoun = tasks.length !== 1 ? 'tasks' : 'task';\r\n  const headingText = `${tasks.length} ${tasksNoun} remaining`;\r\n  const [filter, setFilter] = useState('All');\r\n  const listHeadingRef = useRef(null);\r\n\r\n  function addTask(name) {\r\n    const newTask = {id: 'todo-'+nanoid(), name: name, completed: false};\r\n    setTasks([...tasks,newTask]);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map( (task) => {\r\n      //if this task has the same ID as edited task\r\n      if (id===task.id) {\r\n        return{...task, completed: !task.completed}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter( (task) => id !== task.id);\r\n    setTasks (remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map( (task) => {\r\n      if (id === task.id) {\r\n        return {...task,name:newName}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n  const taskList = tasks\r\n  .filter(FILTER_MAP[filter])\r\n  .map((task) => (\r\n    <Todo \r\n      name={task.name} \r\n      completed={task.completed} \r\n      id={task.id} \r\n      key={task.id}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      editTask={editTask}\r\n    />\r\n  ));\r\n\r\n  const filterList = FILTER_NAMES.map( (name) => (\r\n    <FilterButton \r\n      key={name} \r\n      name={name}\r\n      isPressed={name===filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n\r\n  const prevTaskLength = usePrevious(tasks.length);\r\n\r\n  useEffect( () => {\r\n    if (prevTaskLength - tasks.length ===1) {\r\n      listHeadingRef.current.focus();\r\n    }\r\n  },[tasks.length, prevTaskLength]);\r\n\r\n  return (\r\n      <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n      <div className=\"todoapp stack-large\">\r\n        <h1>My Todolist</h1>\r\n        <Form addTask={addTask}/>\r\n        <ToggleButtonGroup className=\"filters btn-group stack-exception\">\r\n          {filterList}\r\n        </ToggleButtonGroup>\r\n        <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n          {headingText}\r\n        </h2>\r\n        <ul\r\n          role=\"list\"\r\n          className=\"todo-list stack-large stack-exception\"\r\n          aria-labelledby=\"list-heading\"\r\n        >\r\n          {taskList}\r\n        </ul>\r\n      </div>\r\n      </Paper>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}